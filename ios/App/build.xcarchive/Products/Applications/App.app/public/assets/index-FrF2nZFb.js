const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/web-BPTLgaUO.js","assets/index-BYuuB5GE.js","assets/index-BWVvr855.css"])))=>i.map(i=>d[i]);
import{i as b,_ as g,ay as w}from"./index-BYuuB5GE.js";var y;(function(n){n[n.SCAN_MODE_LOW_POWER=0]="SCAN_MODE_LOW_POWER",n[n.SCAN_MODE_BALANCED=1]="SCAN_MODE_BALANCED",n[n.SCAN_MODE_LOW_LATENCY=2]="SCAN_MODE_LOW_LATENCY"})(y||(y={}));var v;(function(n){n[n.CONNECTION_PRIORITY_BALANCED=0]="CONNECTION_PRIORITY_BALANCED",n[n.CONNECTION_PRIORITY_HIGH=1]="CONNECTION_PRIORITY_HIGH",n[n.CONNECTION_PRIORITY_LOW_POWER=2]="CONNECTION_PRIORITY_LOW_POWER"})(v||(v={}));function O(n){return new DataView(Uint8Array.from(n).buffer)}function E(n){return Array.from(new Uint8Array(n.buffer,n.byteOffset,n.byteLength))}function q(n){return`0000${n.toString(16).padStart(4,"0")}-0000-1000-8000-00805f9b34fb`}function L(n){const e=[];let t,a,s=1,r=0;for(t=0;t<n.length;t++)a=n.charCodeAt(t),(a>47&&a<58||a>64&&a<71||a>96&&a<103)&&(r=r<<4^(a>64?a+9:a)&15,(s^=1)&&e.push(r&255));return O(e)}function d(n){return E(n).map(e=>{let t=e.toString(16);return t.length==1&&(t="0"+t),t}).join("")}function p(n){if(typeof n=="string")return n;if(typeof n=="number")return q(n);throw new Error("Invalid UUID")}function m(n){const e={};if(n)return n.forEach((t,a)=>{e[a.toString()]=t}),e}const i=b("BluetoothLe",{web:()=>g(()=>import("./web-BPTLgaUO.js"),__vite__mapDeps([0,1,2])).then(n=>new n.BluetoothLeWeb)}),_=()=>{let n=Promise.resolve();return e=>new Promise((t,a)=>{n=n.then(()=>e()).then(t).catch(a)})};function f(n){return n?_():e=>e()}function u(n){if(typeof n!="string")throw new Error(`Invalid UUID type ${typeof n}. Expected string.`);if(n=n.toLowerCase(),!(n.search(/^[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}$/)>=0))throw new Error(`Invalid UUID format ${n}. Expected 128 bit string (e.g. "0000180d-0000-1000-8000-00805f9b34fb").`);return n}class D{constructor(){this.scanListener=null,this.eventListeners=new Map,this.queue=f(!0)}enableQueue(){this.queue=f(!0)}disableQueue(){this.queue=f(!1)}async initialize(e){await this.queue(async()=>{await i.initialize(e)})}async isEnabled(){return await this.queue(async()=>(await i.isEnabled()).value)}async requestEnable(){await this.queue(async()=>{await i.requestEnable()})}async enable(){await this.queue(async()=>{await i.enable()})}async disable(){await this.queue(async()=>{await i.disable()})}async startEnabledNotifications(e){await this.queue(async()=>{var t;const a="onEnabledChanged";await((t=this.eventListeners.get(a))===null||t===void 0?void 0:t.remove());const s=await i.addListener(a,r=>{e(r.value)});this.eventListeners.set(a,s),await i.startEnabledNotifications()})}async stopEnabledNotifications(){await this.queue(async()=>{var e;const t="onEnabledChanged";await((e=this.eventListeners.get(t))===null||e===void 0?void 0:e.remove()),this.eventListeners.delete(t),await i.stopEnabledNotifications()})}async isLocationEnabled(){return await this.queue(async()=>(await i.isLocationEnabled()).value)}async openLocationSettings(){await this.queue(async()=>{await i.openLocationSettings()})}async openBluetoothSettings(){await this.queue(async()=>{await i.openBluetoothSettings()})}async openAppSettings(){await this.queue(async()=>{await i.openAppSettings()})}async setDisplayStrings(e){await this.queue(async()=>{await i.setDisplayStrings(e)})}async requestDevice(e){return e=e?this.validateRequestBleDeviceOptions(e):void 0,await this.queue(async()=>await i.requestDevice(e))}async requestLEScan(e,t){e=this.validateRequestBleDeviceOptions(e),await this.queue(async()=>{var a;await((a=this.scanListener)===null||a===void 0?void 0:a.remove()),this.scanListener=await i.addListener("onScanResult",s=>{const r=Object.assign(Object.assign({},s),{manufacturerData:this.convertObject(s.manufacturerData),serviceData:this.convertObject(s.serviceData),rawAdvertisement:s.rawAdvertisement?this.convertValue(s.rawAdvertisement):void 0});t(r)}),await i.requestLEScan(e)})}async stopLEScan(){await this.queue(async()=>{var e;await((e=this.scanListener)===null||e===void 0?void 0:e.remove()),this.scanListener=null,await i.stopLEScan()})}async getDevices(e){if(!Array.isArray(e))throw new Error("deviceIds must be an array");return this.queue(async()=>(await i.getDevices({deviceIds:e})).devices)}async getConnectedDevices(e){if(!Array.isArray(e))throw new Error("services must be an array");return e=e.map(u),this.queue(async()=>(await i.getConnectedDevices({services:e})).devices)}async getBondedDevices(){return this.queue(async()=>(await i.getBondedDevices()).devices)}async connect(e,t,a){await this.queue(async()=>{var s;if(t){const r=`disconnected|${e}`;await((s=this.eventListeners.get(r))===null||s===void 0?void 0:s.remove());const o=await i.addListener(r,()=>{t(e)});this.eventListeners.set(r,o)}await i.connect(Object.assign({deviceId:e},a))})}async createBond(e,t){await this.queue(async()=>{await i.createBond(Object.assign({deviceId:e},t))})}async isBonded(e){return await this.queue(async()=>(await i.isBonded({deviceId:e})).value)}async disconnect(e){await this.queue(async()=>{await i.disconnect({deviceId:e})})}async getServices(e){return await this.queue(async()=>(await i.getServices({deviceId:e})).services)}async discoverServices(e){await this.queue(async()=>{await i.discoverServices({deviceId:e})})}async getMtu(e){return await this.queue(async()=>(await i.getMtu({deviceId:e})).value)}async requestConnectionPriority(e,t){await this.queue(async()=>{await i.requestConnectionPriority({deviceId:e,connectionPriority:t})})}async readRssi(e){return await this.queue(async()=>{const a=await i.readRssi({deviceId:e});return parseFloat(a.value)})}async read(e,t,a,s){return t=u(t),a=u(a),await this.queue(async()=>{const o=await i.read(Object.assign({deviceId:e,service:t,characteristic:a},s));return this.convertValue(o.value)})}async write(e,t,a,s,r){return t=u(t),a=u(a),this.queue(async()=>{if(!s?.buffer)throw new Error("Invalid data.");let o=s;w.getPlatform()!=="web"&&(o=d(s)),await i.write(Object.assign({deviceId:e,service:t,characteristic:a,value:o},r))})}async writeWithoutResponse(e,t,a,s,r){t=u(t),a=u(a),await this.queue(async()=>{if(!s?.buffer)throw new Error("Invalid data.");let o=s;w.getPlatform()!=="web"&&(o=d(s)),await i.writeWithoutResponse(Object.assign({deviceId:e,service:t,characteristic:a,value:o},r))})}async readDescriptor(e,t,a,s,r){return t=u(t),a=u(a),s=u(s),await this.queue(async()=>{const c=await i.readDescriptor(Object.assign({deviceId:e,service:t,characteristic:a,descriptor:s},r));return this.convertValue(c.value)})}async writeDescriptor(e,t,a,s,r,o){return t=u(t),a=u(a),s=u(s),this.queue(async()=>{if(!r?.buffer)throw new Error("Invalid data.");let c=r;w.getPlatform()!=="web"&&(c=d(r)),await i.writeDescriptor(Object.assign({deviceId:e,service:t,characteristic:a,descriptor:s,value:c},o))})}async startNotifications(e,t,a,s,r){t=u(t),a=u(a),await this.queue(async()=>{var o;const c=`notification|${e}|${t}|${a}`;await((o=this.eventListeners.get(c))===null||o===void 0?void 0:o.remove());const h=await i.addListener(c,l=>{s(this.convertValue(l?.value))});this.eventListeners.set(c,h),await i.startNotifications(Object.assign({deviceId:e,service:t,characteristic:a},r))})}async stopNotifications(e,t,a){t=u(t),a=u(a),await this.queue(async()=>{var s;const r=`notification|${e}|${t}|${a}`;await((s=this.eventListeners.get(r))===null||s===void 0?void 0:s.remove()),this.eventListeners.delete(r),await i.stopNotifications({deviceId:e,service:t,characteristic:a})})}validateRequestBleDeviceOptions(e){return e.services&&(e.services=e.services.map(u)),e.optionalServices&&(e.optionalServices=e.optionalServices.map(u)),e}convertValue(e){return typeof e=="string"?L(e):e===void 0?new DataView(new ArrayBuffer(0)):e}convertObject(e){if(e===void 0)return;const t={};for(const a of Object.keys(e))t[a]=this.convertValue(e[a]);return t}}const C=new D;export{C as BleClient,i as BluetoothLe,v as ConnectionPriority,y as ScanMode,d as dataViewToHexString,E as dataViewToNumbers,L as hexStringToDataView,m as mapToObject,q as numberToUUID,O as numbersToDataView,p as webUUIDToString};
