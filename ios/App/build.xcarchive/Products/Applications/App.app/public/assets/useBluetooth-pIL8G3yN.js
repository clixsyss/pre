const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-FrF2nZFb.js","assets/index-BYuuB5GE.js","assets/index-BWVvr855.css"])))=>i.map(i=>d[i]);
import{bl as P,bm as D,bn as W,bo as x,r as p,ay as m,aA as n,_}from"./index-BYuuB5GE.js";const A='<circle cx="15" cy="15" r="15"><animate attributeName="r" from="15" to="15" begin="0s" dur="0.8s" values="15;9;15" calcMode="linear" repeatCount="indefinite"></animate><animate attributeName="fill-opacity" from="1" to="1" begin="0s" dur="0.8s" values="1;.5;1" calcMode="linear" repeatCount="indefinite"></animate></circle><circle cx="60" cy="15" r="9" fill-opacity=".3"><animate attributeName="r" from="9" to="9" begin="0s" dur="0.8s" values="9;15;9" calcMode="linear" repeatCount="indefinite"></animate><animate attributeName="fill-opacity" from=".5" to=".5" begin="0s" dur="0.8s" values=".5;1;.5" calcMode="linear" repeatCount="indefinite"></animate></circle><circle cx="105" cy="15" r="15"><animate attributeName="r" from="15" to="15" begin="0s" dur="0.8s" values="15;9;15" calcMode="linear" repeatCount="indefinite"></animate><animate attributeName="fill-opacity" from="1" to="1" begin="0s" dur="0.8s" values="1;.5;1" calcMode="linear" repeatCount="indefinite"></animate></circle>',k=P({name:"QSpinnerDots",props:D,setup(r){const{cSize:c,classes:i}=W(r);return()=>x("svg",{class:i.value,fill:"currentColor",width:c.value,height:c.value,viewBox:"0 0 120 30",xmlns:"http://www.w3.org/2000/svg",innerHTML:A})}});function z(){const r=p(!1),c=p(!1),i=p(!1),l=p(""),a=p(null),u=p(!1);let o=null,d=null;const g=async()=>{try{if(m.isNativePlatform())try{const{BleClient:t}=await _(async()=>{const{BleClient:e}=await import("./index-FrF2nZFb.js");return{BleClient:e}},__vite__mapDeps([0,1,2]));d=t;try{return await d.initialize(),u.value=!0,console.log("✅ Capacitor BLE initialized"),!0}catch(e){return console.error("❌ BLE initialization failed:",e),u.value=!1,a.value="BLE initialization failed. Please enable Bluetooth.",!1}}catch(t){return console.error("❌ BLE plugin not found:",t),u.value=!1,a.value="BLE plugin not installed. Please install @capacitor-community/bluetooth-le",!1}else return navigator.bluetooth?(u.value=!0,console.log("✅ Web Bluetooth API available"),!0):(console.warn("⚠️ Web Bluetooth API not available"),u.value=!1,a.value="Web Bluetooth not supported in this browser. Use Chrome or Edge.",!1)}catch(t){return console.error("❌ Error checking BLE support:",t),a.value=t.message||"Unknown error checking BLE support",u.value=!1,!1}},y=async t=>{try{c.value=!0,i.value=!0,console.log("🔍 Scanning for BLE devices with service:",t);const e=await d.requestDevice({services:[t],optionalServices:[t]});return console.log("📱 Device found:",e),o=e,await d.connect(e.deviceId,()=>{console.log("🔌 Device disconnected"),f()}),l.value=e.name||e.deviceId,r.value=!0,i.value=!1,console.log("✅ Connected to device:",l.value),n.create({type:"positive",message:`Connected to ${l.value}`,position:"top",timeout:2e3}),!0}catch(e){return console.error("❌ Capacitor BLE connection error:",e),a.value=e.message,r.value=!1,i.value=!1,n.create({type:"negative",message:e.message||"Failed to connect to device",position:"top",timeout:3e3}),!1}finally{c.value=!1}},h=async t=>{try{return c.value=!0,i.value=!0,console.log("🔍 Requesting Web Bluetooth device with service:",t),o=await navigator.bluetooth.requestDevice({filters:[{services:[t]}],optionalServices:[t]}),console.log("📱 Device selected:",o.name),l.value=o.name||"Unknown Device",await o.gatt.connect(),console.log("✅ Connected to GATT server"),o.addEventListener("gattserverdisconnected",f),r.value=!0,i.value=!1,n.create({type:"positive",message:`Connected to ${l.value}`,position:"top",timeout:2e3}),!0}catch(e){return console.error("❌ Web Bluetooth connection error:",e),a.value=e.message,r.value=!1,i.value=!1,e.name==="NotFoundError"?n.create({type:"info",message:"Device selection cancelled",position:"top",timeout:2e3}):n.create({type:"negative",message:e.message||"Failed to connect to device",position:"top",timeout:3e3}),!1}finally{c.value=!1}},b=async t=>await g()?m.isNativePlatform()?await y(t):await h(t):(n.create({type:"negative",message:"Bluetooth is not supported on this device",position:"top",timeout:3e3}),!1),E=async(t,e,s)=>{try{if(!o)throw new Error("No device connected");console.log("📝 Writing to characteristic:",e),console.log("📝 Data:",s);const w=new TextEncoder().encode(s);return await d.write(o.deviceId,t,e,w),console.log("✅ Data written successfully"),!0}catch(v){return console.error("❌ Write error:",v),a.value=v.message,n.create({type:"negative",message:"Failed to send command",position:"top",timeout:3e3}),!1}},B=async(t,e,s)=>{try{if(!o||!o.gatt.connected)throw new Error("No device connected");console.log("📝 Writing to characteristic:",e),console.log("📝 Data:",s);const L=await(await o.gatt.getPrimaryService(t)).getCharacteristic(e),S=new TextEncoder().encode(s);return await L.writeValue(S),console.log("✅ Data written successfully"),!0}catch(v){return console.error("❌ Write error:",v),a.value=v.message,n.create({type:"negative",message:"Failed to send command",position:"top",timeout:3e3}),!1}},C=async(t,e,s)=>r.value?m.isNativePlatform()?await E(t,e,s):await B(t,e,s):(n.create({type:"warning",message:"Please connect to a device first",position:"top",timeout:2e3}),!1),N=async()=>{try{if(!o){console.log("⚠️ No device to disconnect");return}console.log("🔌 Disconnecting from device..."),m.isNativePlatform()?await d.disconnect(o.deviceId):o.gatt.connected&&await o.gatt.disconnect(),f(),n.create({type:"info",message:"Disconnected from device",position:"top",timeout:2e3})}catch(t){console.error("❌ Disconnect error:",t),a.value=t.message,f()}},f=()=>{r.value=!1,l.value="",o=null,console.log("🔌 Device disconnected and state cleared")};return{isConnected:r,isConnecting:c,isScanning:i,isBLESupported:u,deviceName:l,lastError:a,checkBLESupport:g,connect:b,write:C,disconnect:N}}export{k as Q,z as u};
