import{aC as E,aR as N,aD as _,u as x,c as h,r as p,aE as P,f as i,b4 as A,ba as k,aH as B,bg as T,o as f,bC as z}from"./index-BYuuB5GE.js";const F={__name:"RequestChat",props:{requestId:{type:String,required:!1},projectId:{type:String,required:!1}},setup(q){const v=q,y=N(),I=_(),w=x(),a=h(()=>v.requestId||y.params.id),o=h(()=>v.projectId||w.selectedProject?.id),d=p([]),g=p(!1),u=p(null),c=p(null);P(async()=>{await j(),await R()});const j=async()=>{try{if(g.value=!0,!o.value||!a.value){console.error("Missing projectId or requestId",{projectId:o.value,requestId:a.value}),u.value=null,g.value=!1;return}const s=`projects/${o.value}/requestSubmissions/${a.value}`,e=await i.getDoc(s);if(e.exists()){const t=e.data();u.value={id:e.id,title:t.title||t.description||"Request Chat",categoryName:t.categoryName||t.category||"Request",status:t.status||"pending",...t}}else console.error("Request not found in Firestore"),u.value=null}catch(s){console.error("Error loading request data:",s),u.value=null}finally{g.value=!1}},R=async()=>{try{if(!o.value||!a.value){console.error("Missing projectId or requestId for messages",{projectId:o.value,requestId:a.value});return}const s=`projects/${o.value}/requestSubmissions/${a.value}/messages`,e={orderBy:{field:"createdAt",direction:"asc"},timeoutMs:1e4},t=await i.getDocs(s,e);d.value=t.docs.map(r=>{const n=r.data();return{id:r.id,...n,timestamp:n.createdAt}}),c.value&&c.value(),c.value=setInterval(async()=>{try{const n=(await i.getDocs(s,e)).docs.map(m=>{const l=m.data();return{id:m.id,...l,timestamp:l.createdAt}});JSON.stringify(n)!==JSON.stringify(d.value)&&(d.value=n)}catch(r){console.error("Error polling messages:",r)}},5e3)}catch(s){console.error("Error loading messages:",s)}},S=async s=>{try{const e=await f.getCurrentUser();if(!e)throw new Error("User not authenticated");if(!o.value||!a.value)throw new Error("Missing projectId or requestId");const t={text:s,senderType:"user",senderId:e.uid,senderName:e.displayName||"User",createdAt:new Date},r=`projects/${o.value}/requestSubmissions/${a.value}/messages`;await i.addDoc(r,t)}catch(e){throw console.error("Error sending message:",e),e}},U=async s=>{try{console.log("🚀 RequestChat: Uploading image...",{fileName:s.name,size:s.size});const e=await f.getCurrentUser();if(!e)throw new Error("User not authenticated");if(!o.value||!a.value)throw new Error("Missing projectId or requestId");const t=Date.now(),r=s.name.split(".").pop(),n=`message_${t}.${r}`,m=`projects/${o.value}/request-submissions/${a.value}/messages/`,l=await z.uploadFile(s,m,n);console.log("✅ RequestChat: Image uploaded successfully:",l);const M={text:"Image message",imageUrl:l,senderType:"user",senderId:e.uid,senderName:e.displayName||"User",createdAt:new Date},$=`projects/${o.value}/requestSubmissions/${a.value}/messages`;await i.addDoc($,M),console.log("✅ RequestChat: Image message sent successfully")}catch(e){throw console.error("❌ RequestChat: Error uploading image:",e),e}},b=()=>{I.go(-1)},C=()=>{console.log("Message sent successfully")},D=()=>{console.log("Image uploaded successfully")};return A(()=>{c.value&&c.value()}),(s,e)=>(B(),k(T,{"chat-data":u.value,messages:d.value,loading:g.value,"chat-type":"request","default-title":"Request Chat","error-title":"Request Not Found","error-message":"The request you're looking for doesn't exist or has been deleted.","closed-message":"This request has been closed. You can view the conversation but cannot send new messages.","closed-placeholder":"This request is closed","on-send-message":S,"on-image-upload":U,onBack:b,onMessageSent:C,onImageUploaded:D},null,8,["chat-data","messages","loading"]))}},J=E(F,[["__scopeId","data-v-edce2c4f"]]);export{J as default};
